


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Kate Baumli and Rebecca Wong
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 2/27/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ;   Repeat the functionality from Lab2-3 but now we want
                        you to 
    8 00000000         ;   insert debugging instruments which gather data (stat
                       e and timing)
    9 00000000         ;   to verify that the system is functioning as expected
                       .
   10 00000000         ; Hardware connections (External: One button and one LED
                       )
   11 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   13 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   14 00000000         ; Instrumentation data to be gathered is as follows:
   15 00000000         ; After Button(PE1) press collect one state and time ent
                       ry. 
   16 00000000         ; After Buttin(PE1) release, collect 7 state and
   17 00000000         ; time entries on each change in state of the LED(PE0): 
                       
   18 00000000         ; An entry is one 8-bit entry in the Data Buffer and one
                        
   19 00000000         ; 32-bit entry in the Time Buffer
   20 00000000         ;  The Data Buffer entry (byte) content has:
   21 00000000         ;    Lower nibble is state of LED (PE0)
   22 00000000         ;    Higher nibble is state of Button (PE1)
   23 00000000         ;  The Time Buffer entry (32-bit) has:
   24 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   25 00000000         ; Note: The size of both buffers is 50 entries. Once you
                        fill these
   26 00000000         ;       entries you should stop collecting data
   27 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   28 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   29 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   30 00000000         
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R



ARM Macro Assembler    Page 2 


                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   42 00000000         
   43 00000000 0007A120 
                       COUNT   EQU              500000
   44 00000000 002625A0 
                       ENTIRE_COUNT
                               EQU              2500000
   45 00000000 00000001 
                       LED_ON  EQU              1
   46 00000000 00000000 
                       LED_OFF EQU              0
   47 00000000 00000002 
                       SWITCH  EQU              2
   48 00000000 00000001 
                       ONE     EQU              1
   49 00000000         
   50 00000000         ; RAM Area
   51 00000000                 AREA             DATA, ALIGN=2
   52 00000000         ;-UUU-Declare  and allocate space for your Buffers 
   53 00000000         ;    and any variables (like pointers and counters) here
                       
   54 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            50
   55 00000032 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            200         ; 50 elements 4 byt
                                                            es each 
   56 000000FA 00 00 00 
              00       DataPt  SPACE            4
   57 000000FE 00 00 00 
              00       TimePt  SPACE            4
   58 00000102 00      NEntries
                               SPACE            1
   59 00000103         
   60 00000103         ; ROM Area
   61 00000103                 IMPORT           TExaS_Init
   62 00000103                 IMPORT           SysTick_Init
   63 00000103                 IMPORT           NVIC_ST_CURRENT_R
   64 00000103         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   65 00000103                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   66 00000000                 THUMB
   67 00000000                 EXPORT           Start
   68 00000000         
   69 00000000         Start
   70 00000000         ; TExaS_Init sets bus clock at 80 MHz
   71 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   72 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   73 00000006         
   74 00000006 4948            LDR              R1, =SYSCTL_RCGCGPIO_R ; activa
                                                            te clock for Port F
                                                            
   75 00000008 6808            LDR              R0, [R1]
   76 0000000A F040 0010       ORR              R0, R0, #0x10 ; set bits 4 & 5 
                                                            to turn on clock
   77 0000000E 6008            STR              R0, [R1]
   78 00000010 BF00            NOP
   79 00000012 BF00            NOP
   80 00000014 4945            LDR              R1, =GPIO_PORTE_DIR_R ; set dir
                                                            ection register
   81 00000016 F04F 0001       MOV              R0,#0x01    ; PE1 INPUT, PE0 ou
                                                            tput
   82 0000001A 6008            STR              R0, [R1]
   83 0000001C 4944            LDR              R1, =GPIO_PORTE_AFSEL_R ; regul
                                                            ar port function
   84 0000001E F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   85 00000022 6008            STR              R0, [R1]
   86 00000024 4943            LDR              R1, =GPIO_PORTE_DEN_R ; enable 
                                                            Port E digital port
                                                            
   87 00000026 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
   88 0000002A 6008            STR              R0, [R1]
   89 0000002C 6808            LDR              R0, [R1]
   90 0000002E         
   91 0000002E 4C42            LDR              R4,=COUNT   ;R4 HAS 20% OF DELA



ARM Macro Assembler    Page 5 


                                                            Y
   92 00000030 F04F 0901       LDR              R9,=ONE
   93 00000034 4D41            LDR              R5,=ENTIRE_COUNT
   94 00000036 F007 0700       AND              R7,R7,#0    ;R7 WILL HOLD FLAG 
                                                            THAT WILL BE ASSERT
                                                            ED IF SWITCH HAS BE
                                                            EN PRESSED
   95 0000003A 4841            LDR              R0,=GPIO_PORTE_DATA_R
   96 0000003C         loop
   97 0000003C 6801            LDR              R1,[R0]     ;STARTING FLASHING
   98 0000003E F04F 0201       LDR              R2,=LED_ON  ;TURNING
   99 00000042 EA41 0102       ORR              R1,R1,R2    ;ON
  100 00000046 6001            STR              R1,[R0]     ;LED
  101 00000048 4623            MOV              R3,R4       ;R3 WILL BE USED BY
                                                             DELAY FUNCTION & D
                                                            ECREMENTED
  102 0000004A F000 F824       BL               DELAY
  103 0000004E 6801            LDR              R1,[R0]     ;TURNING
  104 00000050 F04F 0200       LDR              R2,=LED_OFF
  105 00000054 EA01 0102       AND              R1,R1,R2    ;LED
  106 00000058 6001            STR              R1,[R0]     ;OFF
  107 0000005A 4623            MOV              R3,R4       ;REPLENISHING R3 (B
                                                            ECAUSE IT WAS DECRE
                                                            MENTED TO 0 IN DELA
                                                            Y)  
  108 0000005C EBC3 0305       RSB              R3,R3,R5    ;SUBTRACTING DUTY C
                                                            YCLE PERCENTATGE FR
                                                            OM 100% TO GET OFF 
                                                            DUTY CYCLE
  109 00000060 F000 F819       BL               DELAY
  110 00000064 6801            LDR              R1,[R0]
  111 00000066 F04F 0602       LDR              R6,=SWITCH
  112 0000006A EA01 0106       AND              R1,R1,R6    ;BIT MASKING SWITCH
                                                            
  113 0000006E 42B1            CMP              R1, R6
  114 00000070 D102            BNE              NOT_CURRENTLY_PRESSED ;CHECKING
                                                             IF SWITCH  IS PRES
                                                            SED CURRENTLY
  115 00000072 F04F 0701       LDR              R7,=ONE
  116 00000076 E00D            B                NO_FLAG
  117 00000078 454F    NOT_CURRENTLY_PRESSED
                               CMP              R7,R9       ;COMPARING TO ONE T
                                                            O SEE IF FLAG IS AS
                                                            SERTED
  118 0000007A D10B            BNE              NO_FLAG
  119 0000007C 42AC            CMP              R4,R5       ;SWITCH HAS BEEN AS
                                                            SERTED AND RELEASED
                                                            , CHANGING DUTY CYC
                                                            LE
  120 0000007E D104            BNE              ADD_TWENTY_PERCENT ;CHECKING IF
                                                             THE DUTY CYCLE IS 
                                                            AT 100%
  121 00000080 F004 0400       AND              R4,R4,#0
  122 00000084 F007 0700       AND              R7,R7,#0
  123 00000088 E7D8            B                loop        ;SETTING IT TO 0 FO
                                                            R THE NEXT ROUND
  124 0000008A F8DF 80AC 
                       ADD_TWENTY_PERCENT
                               LDR              R8,=COUNT



ARM Macro Assembler    Page 6 


  125 0000008E 4444            ADD              R4,R4,R8    ;ADDING 20% TO THE 
                                                            DUTY CYCLE
  126 00000090 F007 0700       AND              R7,R7,#0
  127 00000094 E7D2    NO_FLAG B                loop
  128 00000096         
  129 00000096 1E5B    DELAY   SUBS             R3,R3,#1
  130 00000098 D8FD            BHI              DELAY
  131 0000009A 4770            BX               LR
  132 0000009C         
  133 0000009C         Debug_Init
  134 0000009C B51F            PUSH             {R0-R4,LR}
  135 0000009E 4A29            LDR              R2,=DataBuffer
  136 000000A0 4B29            LDR              R3,=TimeBuffer
  137 000000A2 482A            LDR              R0,=DataPt
  138 000000A4 492A            LDR              R1,=TimePt
  139 000000A6 6002            STR              R2,[R0]
  140 000000A8 600B            STR              R3,[R1]
  141 000000AA 6800            LDR              R0,[R0]     ; R0 and R1 now hav
                                                            e the actual pointe
                                                            rs R0 DATA R1 TIME
  142 000000AC 6809            LDR              R1,[R1]
  143 000000AE F04F 0232       MOV              R2,#50      ;R2 will keep track
                                                             of how many array 
                                                            values we have trav
                                                            ersed through
  144 000000B2 F04F 03FF       MOV              R3,#0xFF
  145 000000B6         
  146 000000B6         Buffer_Init                          ;loop that stores 0
                                                            xFF into all buffer
                                                             locations
  147 000000B6 7003            STRB             R3,[R0]     ;STORE 0xFF into da
                                                            ta buffer location
  148 000000B8 700B            STRB             R3,[R1]
  149 000000BA 704B            STRB             R3,[R1,#1]
  150 000000BC 708B            STRB             R3,[R1,#2]
  151 000000BE 70CB            STRB             R3,[R1,#3]  ;STORE 0xFF into ev
                                                            ery byte
  152 000000C0 F100 0001       ADD              R0,R0,#1
  153 000000C4 F101 0104       ADD              R1,R1,#4
  154 000000C8 1E52            SUBS             R2,R2,#1
  155 000000CA D1F4            BNE              Buffer_Init
  156 000000CC F7FF FFFE       BL               SysTick_Init
  157 000000D0 4820            LDR              R0,=NEntries
  158 000000D2 F04F 0132       MOV              R1,#50
  159 000000D6 6001            STR              R1,[R0]
  160 000000D8 BD1F            POP              {R0-R4,PC}  ;return from subrou
                                                            tine
  161 000000DA         
  162 000000DA         Debug_Capture
  163 000000DA E92D 47FF       PUSH             {R0-R10,LR}
  164 000000DE 481D            LDR              R0,=NEntries ;Checking if we ha
                                                            ve stored 50 entrie
                                                            s yet
  165 000000E0 6801            LDR              R1,[R0]
  166 000000E2 2900            CMP              R1,#0
  167 000000E4 D01E            BEQ              DONE
  168 000000E6 4A16            LDR              R2,=GPIO_PORTE_DATA_R
  169 000000E8 6813            LDR              R3,[R2]     ;Loading in port E 
                                                            data



ARM Macro Assembler    Page 7 


  170 000000EA 4F1B            LDR              R7,=NVIC_ST_CURRENT_R
  171 000000EC F8D7 8000       LDR              R8,[R7]     ;Loading in SysTick
                                                             currrent time 
  172 000000F0 F003 0402       AND              R4,R3,#0x02 ;bit masking switch
                                                            
  173 000000F4 EA4F 04C4       LSL              R4,R4,#3    ;shifting it over t
                                                            o next nibble
  174 000000F8 F003 0301       AND              R3,R3,#0x01 ;combining Data to 
                                                            have PEO in first n
                                                            ibble and
  175 000000FC EA43 0304       ORR              R3,R3,R4    ; PE1 in next nibbl
                                                            e
  176 00000100 4D12            LDR              R5,=DataPt
  177 00000102 682E            LDR              R6,[R5]
  178 00000104 7033            STRB             R3,[R6]     ;storing data in da
                                                            ta buffer array
  179 00000106 F106 0601       ADD              R6,R6,#1
  180 0000010A 602E            STR              R6,[R5]     ;incrememnted dataB
                                                            uffer pointer for n
                                                            ext time around
  181 0000010C F8DF 9040       LDR              R9,=TimePt
  182 00000110 F8D9 A000       LDR              R10,[R9]    ;R10 has next avail
                                                            abl address of time
                                                             buffer array
  183 00000114 F8CA 8000       STR              R8,[R10]
  184 00000118 F10A 0A01       ADD              R10,R10,#1  ;incremented timeBu
                                                            ffer pointer for ne
                                                            xt time aroudn
  185 0000011C F8C9 A000       STR              R10,[R9]
  186 00000120 F1A1 0101       SUB              R1,R1,#1    ;decrementing index
                                                             counter 
  187 00000124         DONE
  188 00000124 E8BD 87FF       POP              {R0-R10,PC}
  189 00000128         
  190 00000128         
  191 00000128         
  192 00000128                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  193 00000128                 END                          ; end of file
              400FE608 
              40024400 
              40024420 
              4002451C 
              0007A120 
              002625A0 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 54 in file main.s
   Uses
      At line 135 in file main.s
Comment: DataBuffer used once
DataPt 000000FA

Symbol: DataPt
   Definitions
      At line 56 in file main.s
   Uses
      At line 137 in file main.s
      At line 176 in file main.s

NEntries 00000102

Symbol: NEntries
   Definitions
      At line 58 in file main.s
   Uses
      At line 157 in file main.s
      At line 164 in file main.s

TimeBuffer 00000032

Symbol: TimeBuffer
   Definitions
      At line 55 in file main.s
   Uses
      At line 136 in file main.s
Comment: TimeBuffer used once
TimePt 000000FE

Symbol: TimePt
   Definitions
      At line 57 in file main.s
   Uses
      At line 138 in file main.s
      At line 181 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: .text unused
ADD_TWENTY_PERCENT 0000008A

Symbol: ADD_TWENTY_PERCENT
   Definitions
      At line 124 in file main.s
   Uses
      At line 120 in file main.s
Comment: ADD_TWENTY_PERCENT used once
Buffer_Init 000000B6

Symbol: Buffer_Init
   Definitions
      At line 146 in file main.s
   Uses
      At line 155 in file main.s
Comment: Buffer_Init used once
DELAY 00000096

Symbol: DELAY
   Definitions
      At line 129 in file main.s
   Uses
      At line 102 in file main.s
      At line 109 in file main.s
      At line 130 in file main.s

DONE 00000124

Symbol: DONE
   Definitions
      At line 187 in file main.s
   Uses
      At line 167 in file main.s
Comment: DONE used once
Debug_Capture 000000DA

Symbol: Debug_Capture
   Definitions
      At line 162 in file main.s
   Uses
      None
Comment: Debug_Capture unused
Debug_Init 0000009C

Symbol: Debug_Init
   Definitions
      At line 133 in file main.s
   Uses
      None
Comment: Debug_Init unused
NOT_CURRENTLY_PRESSED 00000078



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: NOT_CURRENTLY_PRESSED
   Definitions
      At line 117 in file main.s
   Uses
      At line 114 in file main.s
Comment: NOT_CURRENTLY_PRESSED used once
NO_FLAG 00000094

Symbol: NO_FLAG
   Definitions
      At line 127 in file main.s
   Uses
      At line 116 in file main.s
      At line 118 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 69 in file main.s
   Uses
      At line 67 in file main.s
Comment: Start used once
loop 0000003C

Symbol: loop
   Definitions
      At line 96 in file main.s
   Uses
      At line 123 in file main.s
      At line 127 in file main.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNT 0007A120

Symbol: COUNT
   Definitions
      At line 43 in file main.s
   Uses
      At line 91 in file main.s
      At line 124 in file main.s

ENTIRE_COUNT 002625A0

Symbol: ENTIRE_COUNT
   Definitions
      At line 44 in file main.s
   Uses
      At line 93 in file main.s
Comment: ENTIRE_COUNT used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 95 in file main.s
      At line 168 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 86 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DEN_R unused
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DIR_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: GPIO_PORTF_PUR_R unused
LED_OFF 00000000

Symbol: LED_OFF
   Definitions
      At line 46 in file main.s
   Uses
      At line 104 in file main.s
Comment: LED_OFF used once
LED_ON 00000001

Symbol: LED_ON
   Definitions
      At line 45 in file main.s
   Uses
      At line 98 in file main.s
Comment: LED_ON used once
ONE 00000001

Symbol: ONE
   Definitions
      At line 48 in file main.s
   Uses
      At line 92 in file main.s
      At line 115 in file main.s

SWITCH 00000002

Symbol: SWITCH



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 47 in file main.s
   Uses
      At line 111 in file main.s
Comment: SWITCH used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 74 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

NVIC_ST_CURRENT_R 00000000

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 63 in file main.s
   Uses
      At line 170 in file main.s
Comment: NVIC_ST_CURRENT_R used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 156 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 71 in file main.s
Comment: TExaS_Init used once
3 symbols
369 symbols in table
